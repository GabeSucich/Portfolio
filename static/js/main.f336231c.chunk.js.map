{"version":3,"sources":["utils/ProjectState/action.js","utils/ProjectState/index.js","utils/BioState/action.js","utils/BioState/bioPhotoInfo.js","utils/BioState/index.js","Navigation/index.js","ProjectSelect/Thumbnail/index.js","ProjectSelect/index.js","ProjectDisplay/DisplayHeader/index.js","ProjectDisplay/Instructions/index.js","ProjectDisplay/LiveImage/index.js","ProjectDisplay/ImageDisplay/index.js","ProjectDisplay/CodeStack/index.js","ProjectDisplay/ProjectDescription/descriptions/investmentSimulator.js","ProjectDisplay/ProjectDescription/descriptions/index.js","ProjectDisplay/ProjectDescription/descriptions/blackjackTrainer.js","ProjectDisplay/ProjectDescription/descriptions/financhill.js","ProjectDisplay/ProjectDescription/index.js","ProjectDisplay/index.js","Bio/PhotoDisplay/index.js","Bio/Text/index.js","Bio/index.js","App.js","reportWebVitals.js","index.js","utils/projectInfo.js"],"names":["NEXT_PROJECT","PREV_PROJECT","SELECT_PROJECT","ProjectContext","createContext","Provider","initial","selectedIndex","reducer","state","action","type","projectInfo","length","ProjectProvider","value","props","useReducer","dispatch","useProjectContext","useContext","NEXT_PHOTO","PREV_PHOTO","SELECT_PHOTO","bioPhotoInfo","src","BioContext","photoInfo","BioProvider","Navigation","useState","active","setActive","loc","useLocation","useRouteMatch","useEffect","path","className","Segment","inverted","Menu","secondary","Item","as","NavLink","to","name","onClick","window","open","process","position","Icon","color","size","Thumbnail","imageSRC","index","projectDispatch","Header","Image","centered","fluid","ProjectSelect","projectState","map","project","thumbnailSRC","DisplayHeader","Grid","Column","width","textAlign","Button","icon","animated","codebaseLink","Content","visible","hidden","deployedLink","Instructions","Container","LiveImage","NextButton","PrevButton","staticSRC","liveSRC","live","toggleLive","basic","Divider","fitted","ImageDisplay","imageInfo","setStatic","displayedIndex","setDisplayedIndex","setLive","nextImage","prevImage","computer","tablet","mobile","disabled","CodeStack","verticalAlign","codeStackSRC","description","descriptions","blackjackTrainer","financhill","investmentSimulator","ProjectDescription","projectObjName","objName","title","ProjectDisplay","PhotoDisplay","bioState","bioDispatch","circular","Group","Section1","Section2","Section3","Bio","style","marginTop","App","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f336231c.chunk.js","sourcesContent":["export const NEXT_PROJECT = \"NEXT_PROJECT\"\nexport const PREV_PROJECT = \"PREV_PROJECT\"\nexport const SELECT_PROJECT = \"SELECT_PROJECT\"\n\n","import React, {createContext, useContext, useReducer} from \"react\"\n\nimport {NEXT_PROJECT, PREV_PROJECT, SELECT_PROJECT} from \"./action\"\n\nimport projectInfo from \"../projectInfo\"\n\nconst ProjectContext = createContext()\nconst {Provider} = ProjectContext\n\nconst initial = {\n    selectedIndex: null\n}\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case NEXT_PROJECT:\n            if (state.selectedIndex === projectInfo.length - 1) {\n                return {...state, selectedIndex: 0}\n            } else {\n                return {...state, selectedIndex: state.selectedIndex + 1}\n            }\n        \n        case PREV_PROJECT:\n            if (state.selectedIndex === 0) {\n                return {...state, selectedIndex: projectInfo.length - 1}\n            } else {\n                return {...state, selectedIndex: state.selectedIndex - 1}\n            }\n        \n        case SELECT_PROJECT:\n\n            return {...state, selectedIndex: action.selectedIndex}\n\n        default:\n            return state\n    }\n}\n\nconst ProjectProvider = ({value = [], ...props}) => {\n\n    const [state, dispatch] = useReducer(reducer, initial)\n\n    return (\n        <Provider value = {[state, dispatch]} {...props} />\n    )\n}\n\nconst useProjectContext = () => {\n    return useContext(ProjectContext)\n}\n\nexport {ProjectProvider, useProjectContext}","export const NEXT_PHOTO = \"NEXT_PHOTO\"\nexport const PREV_PHOTO = \"PREV_PHOTO\"\nexport const SELECT_PHOTO = \"SELECT_PHOTO\"\n\n","const bioPhotoInfo = [\n    {\n        src:  \"/images/bio/1.png\", \n    },\n    {\n        src: \"/images/bio/2.png\",\n    },\n    {\n        src: \"/images/bio/3.png\", \n    },\n    {\n        src: \"/images/bio/4.png\",\n    },\n    {\n        src: \"/images/bio/5.png\" \n    }\n]\n\nexport default bioPhotoInfo","import React, {createContext, useContext, useReducer} from \"react\"\n\nimport {PREV_PHOTO, NEXT_PHOTO, SELECT_PHOTO} from \"./action\"\n\nimport photoInfo from \"./bioPhotoInfo\"\n\n\nconst BioContext = createContext()\nconst {Provider} = BioContext\n\nconst initial = {\n    selectedIndex: 0\n}\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case NEXT_PHOTO:\n            if (state.selectedIndex >= photoInfo.length - 1) {\n                return {...state, selectedIndex: 0}\n            }\n            else {\n                return {...state, selectedIndex: state.selectedIndex + 1}\n            }\n        case PREV_PHOTO:\n            if (state.selectedIndex === 0) {\n                return {...state, selectedIndex: photoInfo.length - 1}\n            } else {\n                return {...state, selectedIndex: state.selectedIndex - 1}\n            }\n        case SELECT_PHOTO:\n            return {...state, selectedIndex: action.selectedIndex}\n    }\n}\n\nconst BioProvider = ({value = [], ...props}) => {\n\n    const [state, dispatch] = useReducer(reducer, initial)\n\n    return (\n        <Provider value = {[state, dispatch]} {...props} />\n    )\n}\n\nconst useBioContext = () => {\n    return useContext(BioContext)\n}\n\nexport {BioProvider, useBioContext}","import React, { useEffect, useState } from \"react\"\n\nimport { Link, NavLink, useLocation, useRouteMatch } from \"react-router-dom\"\n\nimport { Segment, Menu, Icon } from \"semantic-ui-react\"\n\nimport \"./style.css\"\n\nexport default function Navigation({ ...props }) {\n\n    const [active, setActive] = useState()\n\n    const loc = useLocation()\n    const match = useRouteMatch()\n\n    useEffect(() => {\n        setActive(loc.path)\n    }, [])\n\n    const openLinkedin = () => {\n        window.open(\"https://www.linkedin.com/in/gabriel-sucich-6a28a71a8/\")\n    }\n\n    const openGithub = () => {\n        window.open(\"https://github.com/GabeSucich\")\n    }\n\n    const openResume = () => {\n        window.open(process.env.PUBLIC_URL + \"/Resume.pdf\")\n    }\n\n    return (\n        <div className=\"no-margin no-padding\">\n            <Segment inverted>\n                <Menu inverted secondary>\n                    <Menu.Item\n                        as={NavLink}\n                        to=\"/about\"\n                        name=\"About Me\"\n                        active={active === \"/about\"}\n                    />\n                    <Menu.Item\n                        as={NavLink}\n                        to=\"/projects\"\n                        name=\"Projects\"\n                        active={active === \"/projects\"}\n                    />\n                    <Menu.Item\n                        onClick = {openResume}\n                        name=\"Resume\"\n                        \n                    />\n                    <Menu.Menu position=\"right\">\n                        <Menu.Item className=\"icon-menu-item\" onClick = {openGithub}>\n                            <Icon className=\"social-icon\" name=\"github\" color=\"orange\" size=\"big\" />\n                        </Menu.Item>\n                        <Menu.Item className=\"icon-menu-item\" onClick = {openLinkedin}>\n                            <Icon className=\"social-icon\" name=\"linkedin\" color=\"blue\" size=\"big\" />\n                        </Menu.Item>\n                    </Menu.Menu>\n\n                </Menu>\n            </Segment>\n        </div>\n    )\n\n}","import React from \"react\"\n\nimport { Grid, Header, Image, Segment } from \"semantic-ui-react\"\n\nimport { useProjectContext } from \"../../utils/ProjectState\"\nimport { SELECT_PROJECT } from \"../../utils/ProjectState/action\"\n\nimport \"./style.css\"\n\nexport default function Thumbnail({ imageSRC, index, name, ...props }) {\n\n    const [projectState, projectDispatch] = useProjectContext()\n\n    const selectProject = () => {\n        projectDispatch({ type: SELECT_PROJECT, selectedIndex: index })\n    }\n\n\n    return (\n        <div className={\"thumbnail-container \" + props.className} onClick={selectProject}>\n        \n              <Header as = \"h3\" className = \"thumbnail-header roboto\">{name}</Header>\n            \n              <Image src={process.env.PUBLIC_URL + imageSRC} centered fluid />  \n\n        </div>\n    )\n}","import React from \"react\"\n\nimport {useProjectContext} from \"../utils/ProjectState\"\n\nimport { Segment } from \"semantic-ui-react\"\n\nimport projectInfo from \"../utils/projectInfo\"\n\nimport Thumbnail from \"./Thumbnail\"\n\nimport \"./style.css\"\n\n\nexport default function ProjectSelect({...props}) {\n\n    const [projectState, projectDispatch] = useProjectContext()\n\n    return (\n        <Segment inverted className=\"select-background\">\n            {projectInfo.map((project, index, {length}) => {\n                return (\n                    <Thumbnail \n                        name = {projectInfo[index].name}\n                        imageSRC = {projectInfo[index].thumbnailSRC} \n                        className = {projectState.selectedIndex === index ? \"selected\" : \"not-selected\"}\n                        key = {index}\n                        index = {index}\n                        />\n                )\n            })}\n        </Segment>\n    )\n    \n}","import React from \"react-dom\"\n\nimport { Button, Grid, Icon } from \"semantic-ui-react\"\n\nimport { useProjectContext } from \"../../utils/ProjectState\"\nimport {NEXT_PROJECT, PREV_PROJECT} from \"../../utils/ProjectState/action\"\nimport projectInfo from \"../../utils/projectInfo\"\n\nimport \"./style.css\"\n\nexport default function DisplayHeader({ ...props }) {\n\n    const [projectState, projectDispatch] = useProjectContext()\n\n    const nextProject = () => {\n        projectDispatch({type: NEXT_PROJECT})\n    }\n\n    const prevProject = () => {\n        projectDispatch({type: PREV_PROJECT})\n    }\n\n    const openDeployedLink = () => {\n        window.open(projectInfo[projectState.selectedIndex].deployedLink)\n    }\n\n    const openCodeLink = () => {\n        window.open(projectInfo[projectState.selectedIndex].codebaseLink)\n    }\n\n    return (\n        <Grid.Column width={16} textAlign=\"center\">\n            <Button icon=\"angle left\" onClick = {prevProject} color=\"black\"/>\n            <Button animated=\"fade\" color=\"blue\" onClick = {openCodeLink}>\n                <Button.Content visible>Source Code</Button.Content>\n                <Button.Content hidden>\n                    <Icon name='database' />\n                </Button.Content>\n            </Button>\n            <Button animated=\"fade\" color=\"blue\" onClick = {openDeployedLink}>\n                <Button.Content visible>Deployed Application</Button.Content>\n                <Button.Content hidden>\n                    <Icon name='cloudsmith' />\n                </Button.Content>\n            </Button>\n            <Button icon=\"angle right\" onClick = {nextProject} color=\"black\"/>\n        </Grid.Column>\n    )\n\n\n\n}","import React from \"react\"\n\nimport {Container, Header} from \"semantic-ui-react\"\n\nimport \"./style.css\"\n\nexport default function Instructions({...props}) {\n\n    return (\n        <Container textAlign=\"center\" className=\"instructions roboto\">\n            <Header size = \"huge\" className=\"roboto\">Select a project</Header>\n            <Header size = \"medium\" className=\"roboto no-top-margin\">Project details and relevant links will appear here</Header>\n        </Container>\n    )\n}","import React, {useState} from \"react\"\n\nimport { Segment, Image, Button, Divider } from \"semantic-ui-react\"\n\nimport \"./style.css\"\n\nexport default function LiveImage({NextButton, PrevButton, staticSRC, liveSRC, live, toggleLive, ...props}) {\n\n    return (\n        <Segment basic className = {props.className} textAlign=\"center\">\n            <Image fluid centered src = {live ? liveSRC : staticSRC} />\n            <Divider fitted />\n            {PrevButton && <PrevButton />}\n            <Button \n                icon = {live ? \"pause\" : \"play\"} \n                onClick = {toggleLive} \n                color = \"blue\"\n            />\n            {NextButton && <NextButton />}\n        </Segment>\n    )\n\n}","import React, {useEffect, useState} from \"react\"\n\nimport { Button, Grid } from \"semantic-ui-react\"\n\nimport {useProjectContext} from \"../../utils/ProjectState\"\n\nimport LiveImage from \"../LiveImage\"\n\nimport \"./style.css\"\n\nexport default function ImageDisplay({imageInfo, ...props}) {\n\n    const [projectState, projectDispatch] = useProjectContext()\n\n\n    useEffect(() => {\n        setStatic()\n    }, [projectState.selectedIndex])\n\n\n\n    const [displayedIndex, setDisplayedIndex] = useState(0)\n    const [live, setLive] = useState(false);\n\n    const toggleLive = () => {\n        setLive(!live)\n    }\n\n    const setStatic = () => {\n        setLive(false)\n    }\n\n    const nextImage = () => {\n        setStatic()\n        setDisplayedIndex(displayedIndex + 1)\n    }\n\n    const prevImage = () => {\n        setStatic()\n        setDisplayedIndex(displayedIndex - 1)\n    }\n\n    const NextButton = () => {\n        \n        return (\n            <Button icon = \"double angle right\" onClick = {nextImage} disabled = {!(displayedIndex < imageInfo.length - 1)}/>\n        )\n    }\n\n    const PrevButton = () => {\n        return (\n            <Button icon = \"double angle left\" onClick = {prevImage} disabled = {!(displayedIndex > 0)}/>\n        )\n    }\n\n\n\n    return (\n        <Grid.Column computer = \"12\" tablet = \"14\" mobile = \"16\" className=\"image-container\" textAlign=\"center\">\n\n            <LiveImage \n                liveSRC = {process.env.PUBLIC_URL + imageInfo[displayedIndex].liveSRC} \n                staticSRC = {process.env.PUBLIC_URL + imageInfo[displayedIndex].staticSRC} \n                className = \"live-image\" \n                NextButton = {NextButton }\n                PrevButton = {PrevButton}\n                live = {live}\n                toggleLive = {toggleLive}\n                />\n            \n            \n        </Grid.Column>\n    )\n}","import React from \"react\"\n\nimport {Grid, Image} from \"semantic-ui-react\"\n\nimport {useProjectContext} from \"../../utils/ProjectState\"\n\nimport projectInfo from \"../../utils/projectInfo\"\n\nimport \"./style.css\"\n\nexport default function CodeStack({...props}) {\n\n    const [projectState, projectDispatch] = useProjectContext()\n\n    return (\n        <Grid.Column computer = {8} tablet = {8} mobile = {8} verticalAlign = \"middle\">\n            <Image fluid src = {process.env.PUBLIC_URL + projectInfo[projectState.selectedIndex].codeStackSRC} />\n        </Grid.Column>\n    )\n}","var description = \"This application provides an exploratory introduction to individual investment in the stock market. It is well-documented that \"\ndescription += \"over 90% of institutional investors -- hedge funds to whom many people give their money to invest -- historically underperform the market, \"\ndescription += \"and this brings into question if individuals are better off taking investing into their own hands. My team of four built a platform which \"\ndescription += \"will allow users to probe how they can make their money work for them without paying the management fees of a hedge fund. Different approaches \"\ndescription += \"to investing can be simulated by the user, ranging from the most basic investing to more complex, active strategy.\"\n\n\nexport default description","import blackjackTrainer from \"./blackjackTrainer\"\nimport financhill from \"./financhill\"\nimport investmentSimulator from \"./investmentSimulator\"\n\nconst descriptions = {\n    blackjackTrainer,\n    financhill,\n    investmentSimulator\n}\n\nexport default descriptions","var description = \"Blackjack may seem on the surface to be a game of change, but it is actually underpinned by a statistical order which, \"\ndescription += \"if studied rigorously, can be used to systematically beat the game of Blackjack. The key to this is counting cards -- tracking \"\ndescription += \"the distribution of cards in the deck to know when odds are favorable for the player. Unlike its portrayal in the movies, card counting \"\ndescription += \"does not require a genius brain. Rather, it requires some basic memorization and intensive practice. This app is a self-contained guide for \"\ndescription += \"any average blackjack player to become a skilled card couonter. It gives a detailed description of card counting technique and betting strategy. \"\ndescription += \"Users can play simulated games of blackjack with prompts to help master basic and more complex card counting strategy. Stats for each user are saved \"\ndescription += \"so that progress can be followed over time and recurring errors can be identified and corrected.\"\n\n\n\nexport default description","var description = \"This application provides a visual appealing and informative interface for user to organize and maintain their budgets. Income and various classifications \"\ndescription += \"of expenses for each user are stored in a database and used to track daily savings over time. Finances can be updated, and a graphical display of savings over time \"\ndescription += \"will keep individuals accountable for their budgeting practices.\"\n\nexport default description","import React from \"react\"\n\nimport {Grid, Header, Segment} from \"semantic-ui-react\"\n\nimport descriptions from \"./descriptions\"\n\nimport {useProjectContext} from \"../../utils/ProjectState\"\nimport projectInfo from \"../../utils/projectInfo\"\n\nimport \"./style.css\"\n\nexport default function ProjectDescription({...props}) {\n\n    const [projectState, projectDispatch] = useProjectContext()\n\n    const projectObjName = projectInfo[projectState.selectedIndex].objName\n    const title = projectInfo[projectState.selectedIndex].name\n\n    return (\n        <Grid.Column computer = {8} tablet = {16} mobile = {16} textAlign = \"center\" verticalAlign = \"middle\">\n            <Header as = \"h2\" className=\"roboto no-bottom-margin\">{title}</Header>\n            <Segment basic textAlign=\"center\" className=\"roboto no-top-margin\">\n                {descriptions[projectObjName]}\n            </Segment>\n        </Grid.Column>\n    )\n}","import React from \"react\"\nimport { Grid } from \"semantic-ui-react\"\n\nimport { useProjectContext } from \"../utils/ProjectState\"\n\nimport DisplayHeader from \"./DisplayHeader\"\nimport Instructions from \"./Instructions\"\nimport ImageDisplay from \"./ImageDisplay\"\nimport CodeStack from \"./CodeStack\"\nimport ProjectDescription from \"./ProjectDescription\"\n\nimport projectInfo from \"../utils/projectInfo\"\n\nimport \"./style.css\"\n\nexport default function ProjectDisplay({ ...props }) {\n\n    const [projectState, projectDispatch] = useProjectContext()\n    \n\n    if (projectState.selectedIndex !== null) {\n        return (\n            <Grid centered>\n                <DisplayHeader />\n                <ProjectDescription />\n                <CodeStack />\n                <ImageDisplay imageInfo = {projectInfo[projectState.selectedIndex].imageInfo}/>\n            </Grid>\n        )\n    } else {\n        return (\n            <Instructions />\n        )\n    }\n\n\n\n}","import React from \"react\"\n\nimport { Grid, Image, Segment, } from \"semantic-ui-react\"\n\nimport { useBioContext } from \"../../utils/BioState\"\nimport { SELECT_PHOTO, NEXT_PHOTO, PREV_PHOTO } from \"../../utils/BioState/action\"\n\nimport bioPhotoInfo from \"../../utils/BioState/bioPhotoInfo\"\n\nimport \"./style.css\"\n\nexport default function PhotoDisplay({ ...props }) {\n\n    const [bioState, bioDispatch] = useBioContext()\n\n    const nextPhoto = () => {\n        bioDispatch({ type: NEXT_PHOTO })\n    }\n\n    const prevPhoto = () => {\n        bioDispatch({ type: PREV_PHOTO })\n    }\n\n    const selectPhoto = selectedIndex => {\n        bioDispatch({ type: SELECT_PHOTO, selectedIndex: selectedIndex })\n    }\n\n    const getSelectedSRC = () => {\n        return bioPhotoInfo[bioState.selectedIndex].src\n    }\n\n    const getAllSRCs = () => {\n        return bioPhotoInfo.map(photoInfo => photoInfo.src)\n    }\n\n\n    return (\n\n        <Grid centered verticalAlign=\"middle\">\n            <Grid.Column computer = {10} tablet = {10} mobile = {16} textAlign=\"center\" className=\"no-bottom-padding no-top-padding\">\n                <Image circular className=\"main-image\" centered src={process.env.PUBLIC_URL + getSelectedSRC()} />\n            </Grid.Column>\n\n            <Grid.Column computer = {16} tablet = {8} mobile = {10} textAlign=\"center\">\n                <Image.Group>\n                    {getAllSRCs().map((src, index) => {\n                        if (index !== bioState.selectedIndex) {\n                            return (\n                                <Image\n                                    circular\n                                    verticalAlign=\"middle\"\n                                    className=\"selectable-thumbnail\"\n                                    key={index}\n                                    src={process.env.PUBLIC_URL + src}\n                                    onClick={() => selectPhoto(index)}\n                                />\n                            )\n                        }\n                    })}\n\n                </Image.Group>\n            </Grid.Column>\n        </Grid>\n\n    )\n}\n\n\n","import React from \"react\"\n\nexport function Section1({...props}) {\n\n    return (\n        <p className = \"roboto\">\n            There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text. All the Lorem Ipsum generators on the Internet tend to repeat predefined chunks as necessary, making this the first true generator on the Internet. It uses a dictionary of over 200 Latin words, combined with a handful of model sentence structures, to generate Lorem Ipsum which looks reasonable. The generated Lorem Ipsum is therefore always free from repetition, injected humour, or non-characteristic words etc.\n        </p>\n    )\n}\n\nexport function Section2({...props}) {\n\n    return (\n        <p className=\"roboto\">\nThere are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text. All the Lorem Ipsum generators on the Internet tend to repeat predefined chunks as necessary, making this the first true generator on the Internet. It uses a dictionary of over 200 Latin words, combined with a handful of model sentence structures, to generate Lorem Ipsum which looks reasonable. The generated Lorem Ipsum is therefore always free from repetition, injected humour, or non-characteristic words etc.\n        </p>\n\n    )\n\n}\n\nexport function Section3({...props}) {\n\n    return (\n        <p className=\"roboto\">\n            \n        </p>\n\n    )\n\n}\n","import React from \"react\"\n\nimport { Container, Divider, Grid } from \"semantic-ui-react\"\n\nimport PhotoDisplay from \"./PhotoDisplay\"\nimport {Section1, Section2, Section3} from \"./Text\"\n\nexport default function Bio({...props}) {\n\n    const openTranscript = () => {\n        window.open(\"/Transcript.pdf\")\n    }\n\n    return (\n        \n        <Container fluid style = {{marginTop: \"5%\"}}>\n            <Grid centered verticalAlign=\"middle\">\n                <Grid.Column computer = {10} tablet = {16} mobile = {16} textAlign=\"center\">\n                    <Section1/>\n                    <Divider hidden/>\n                    <Section2/>\n                    <Divider hidden />\n                    <Section3 />\n                </Grid.Column>\n                <Grid.Column computer = {6} tablet = {16} mobile = {16} textAlign=\"center\">\n                    <PhotoDisplay /> \n                </Grid.Column>\n            </Grid>\n            \n        </Container>\n           \n    )\n    \n\n}","import 'semantic-ui-css/semantic.min.css'\n\nimport { BrowserRouter as Router, HashRouter, Switch, Redirect, Route } from \"react-router-dom\"\n\nimport { Container } from \"semantic-ui-react\"\n\nimport { ProjectProvider } from \"./utils/ProjectState\"\nimport { BioProvider } from \"./utils/BioState\"\n\nimport Navigation from \"./Navigation\"\nimport ProjectSelect from \"./ProjectSelect\"\nimport ProjectDisplay from \"./ProjectDisplay\"\nimport Bio from \"./Bio\"\nimport \"./App.css\"\n\nfunction App() {\n  return (\n    <ProjectProvider>\n      <BioProvider>\n        <HashRouter>\n          <Navigation />\n          <Container>\n            <Switch>\n              <Route exact path=\"/about\">\n                <Bio />\n              </Route>\n              <Route exact path=\"/projects\">\n                <ProjectSelect />\n                <ProjectDisplay />\n              </Route>\n              <Route>\n                <Redirect to=\"/about\" />\n              </Route>\n            </Switch>\n          </Container>\n        </HashRouter>\n      </BioProvider>\n    </ProjectProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","\n\nmodule.exports = [\n    {\n        name: \"Blackjack Trainer\",\n        objName: \"blackjackTrainer\",\n        thumbnailSRC: \"/images/thumbnails/cardCounting.png\",\n        codebaseLink: \"https://github.com/GabeSucich/CardCounting\",\n        deployedLink: \"https://cardcounting-gs.herokuapp.com/login\",\n        imageInfo: [\n            {liveSRC: \"/images/expanded/blackjackTrainer/1.gif\", staticSRC: \"/images/expanded/blackjackTrainer/1.png\"},\n            {liveSRC: \"/images/expanded/blackjackTrainer/2.gif\", staticSRC: \"/images/expanded/blackjackTrainer/2.png\"},\n            {liveSRC: \"/images/expanded/blackjackTrainer/3.gif\", staticSRC: \"/images/expanded/blackjackTrainer/3.png\"},\n            {liveSRC: \"/images/expanded/blackjackTrainer/4.gif\", staticSRC: \"/images/expanded/blackjackTrainer/4.png\"}\n        ],\n        codeStackSRC: \"/images/codeStacks/blackjackTrainer.png\"\n    },\n    {\n        name: \"QUAN Investing\",\n        objName: \"investmentSimulator\",\n        thumbnailSRC: \"/images/thumbnails/quanInvesting.png\",\n        codebaseLink: \"https://github.com/GabeSucich/InvestmentSimluator\",\n        deployedLink: \"https://investmentsimulator-gs.herokuapp.com/\",\n        imageInfo: [\n            {liveSRC: \"/images/expanded/investmentSimulator/1.gif\", staticSRC: \"/images/expanded/investmentSimulator/1.png\"},\n            {liveSRC: \"/images/expanded/investmentSimulator/2.gif\", staticSRC: \"/images/expanded/investmentSimulator/2.png\"},\n            {liveSRC: \"/images/expanded/investmentSimulator/3.gif\", staticSRC: \"/images/expanded/investmentSimulator/3.png\"}\n        ],\n        codeStackSRC: \"/images/codeStacks/investmentSimulator.png\"\n    },\n\n    {\n        name: \"FinanChill Budgeting\",\n        objName: \"financhill\",\n        thumbnailSRC: \"/images/thumbnails/financhill.png\",\n        codebaseLink: \"https://github.com/GabeSucich/BudgetingApp\",\n        deployedLink: \"https://dashboard.heroku.com/apps/financhill-gs\",\n        imageInfo: [\n            {liveSRC: \"/images/expanded/financhill/1.gif\", staticSRC: \"/images/expanded/financhill/1.png\"},\n            {liveSRC: \"/images/expanded/financhill/2.gif\", staticSRC: \"/images/expanded/financhill/2.png\"},\n            {liveSRC: \"/images/expanded/financhill/3.gif\", staticSRC: \"/images/expanded/financhill/3.png\"}\n        ],\n        codeStackSRC: \"/images/codeStacks/financhill.png\"\n    }\n]"],"sourceRoot":""}